h3. Current goals

* -Sending packets.-
* -Set <code>main</code> to increment tos.-
* -Sending forth word.-
* -Sending numbers.-
* -Sending quotes.-
* -Storing forth word.-
* -VM words.-
* -VM numbers.-
* -VM quotes.-
* Send execute word.
* VM save.
* VM load.
* Conditional.


h3. Network packet

Network packet for machine code and data consists of type byte, 8 word bytes, 16-bit data length and data bytes.

<pre><code>./ss 'A'  '*'  48 0f af 06  48 8d 76 04  c3
'A'  '*' 00 00 00 00 00 00 00     09 00  48 0f af 06  48 8d 76 04  c3</code></pre>

<pre><code>./ss 'D'  'data'  11 22 33 44
'D'  'd' 'a' 't' 'a' 00 00 00 00  04 00  11 22 33 44</code></pre>


Network packet for forth word consists of type byte, and 16-bit length of sequence and sequence of 8-byte names.
<pre><code>./ff 'fact [ drop $1 ] [ dup $1 - fact * ] dup $1 = if ;'
'F' 14 00 "fact" @2 "drop" $1 @5 "dup" $1... ";"</code></pre>


h3. Machine code words

<pre><code>#* 48 0f af 06  48 8d 76 04  c3</code></pre>

Word @*@ associated with pointer to memory area holding raw bytes @48 0f@&hellip;

h3. Forth words

<pre><code>:fact [ drop 1 ] [ dup 1 - fact * ] dup 1 = if ;</code></pre>

Word <code>fact</code> is associated with pointer to memory area holding vm execution prefix and 32-bit indexes and values.

<pre><code>e8 aa aa aa aa [@2] [drop] [$1] [@5] [dup] [$1] [-] [fact] [*] [dup] [$1] [=] [if] [;]</code></pre>

h3. Data words

<pre><code>@data 11 22 33 44</code></pre>

Word <code>d</code> is associated with pointer to memory area holding data execution prefix and raw bytes <code>11 22</code>&hellip;

<pre><code>e8 bb bb bb bb 11 22 33 44</code></pre>

h3. VM

Each forth word is prefixed call to vm machine code so every word can be executed like ordinary machine code.

On entering in vm code top of return stack holds address of first forth word index on stack. So vm code need to lookup
address from def table and execute call to it. On return advance to next forth word and repeat.

On amd64 address of current forth word on top of return stack, %rdx is used for address resulution and for indirect call.

When assembler word is called return stack holds [ vm ret, forth word pointer ] so we need to pop both in ';' word.

